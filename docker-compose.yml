version: '3.3'

services:
  # computing unit
  train-ml:
    shm_size: '2gb'
    image: tannousgeagea/train_ml:latest
    container_name: train-ml-core
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    build:
      context: .
      args:
        user: ${user}
        userid: ${userid}
        group: ${group}
        groupid: ${groupid}
    networks:
      - internal
    # network_mode: host
    dns:
      - 10.0.0.5
    ports:
      - ${INET_HTTP_SERVER_PORT}:${INET_HTTP_SERVER_PORT}
      - ${EVENT_API_PORT}:${EVENT_API_PORT}
      - ${DJANGO_ADMIN_PORT}:${DJANGO_ADMIN_PORT}
      - ${API_PORT}:${API_PORT}
    env_file: .env
    depends_on:
      - postgres
    restart: unless-stopped
    working_dir: /home/$user/src
    volumes:
      - .:/home/$user/src
      - /home/wasteant/ws/Datasets:/media
    user: ${user}
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    container_name: train-ml-rabbitmq
    env_file: .env
    networks:
      - internal
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_VHOST: "/"
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  postgres:
    image: postgres:latest
    container_name: train-ml-postgres
    env_file: .env
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWD}
      POSTGRES_DB: ${DATABASE_NAME}
    networks:
     - internal
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  internal:
    driver: bridge 

volumes:
  postgres_data: